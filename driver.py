# 1–5: первые пять символов фамилии (дополняются девятками, если менее 5 символов).
# 6: Десятичная цифра года рождения (например, для 1987 года это будет 8).
# 7–8: месяц рождения (7-й символ увеличивается на 5, если водитель женщина, т. е. 51–62 вместо 01–12).
# 9–10: Дата в пределах месяца рождения.
# 11: цифра года рождения (например, для 1987 года это будет 7).
# 12–13: первые два инициала имени и отчества, дополненные цифрой 9, если отчества нет.
# 14: Произвольная цифра – обычно 9, но уменьшается, чтобы различать драйверы, у которых первые 13 общих символов.
# Мы всегда будем использовать 9
# 15–16: две контрольные цифры компьютера. Мы всегда будем использовать «АА».

# 0 = Имя
# 1 = Второе имя (если есть)
# 2 = Фамилия
# 3 = Дата рождения (в формате День Месяц Год это может включать полное название месяца или просто сокращенное
# название, например, сентябрь или сентябрь).
# 4 = M-папа или F-мама

def driver(data: list) -> str:
    name, middle, surname, birth, sex = data
    day, month, year = birth.split('-')
    months = {'Jan': '01', 'Feb': '02', 'Mar': '03', 'Apr': '04', 'May': '05', 'Jun': '06',
              'Jul': '07', 'Aug': '08', 'Sep': '09', 'Oct': '10', 'Nov': '11', 'Dec': '12'}

    surname = surname[:5].upper().ljust(5, '9')
    middle = middle[0] if middle != '' else '9'

    m = months.get(month[:3])
    month = m if sex != 'F' else str(int(m) + 50)

    return f'{surname}{year[-2]}{month}{day}{year[-1]}{name[0]}{middle}9AA'


if __name__ == '__main__':
    data = ["John", "James", "Smith", "01-Jan-2000", "M"]

    print(driver(data))
    assert driver(data) == "SMITH001010JJ9AA"

    d = ["Milan", "Urivich", "Nasrytdinov", "29-May-1989", "M"]
    print(driver(d))

    data = ["Johanna", "", "Gibbs", "13-Dec-1981", "F"]
    assert driver(data) == "GIBBS862131J99AA"

    data = ["Andrew", "Robert", "Lee", "02-September-1981", "M"]
    print(driver(data))
    assert driver(data) == "LEE99809021AR9AA"
